name: Publish release

on:
  push:
    tags:
    - 'v*'

jobs:
  release:
    name: Create GitHub release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  compile:
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        sm-version: [ '1.10.x', '1.11.x' ]

    name: SM version ${{ matrix.sm-version }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup SourcePawn Compiler
      id: setup
      uses: rumblefrog/setup-sp@v1.0.0
      with: 
          version: ${{ matrix.sm-version }}

    - name: Create plugins directory
      run: mkdir -p plugins

    - run: spcomp -i ./scripting/includes ./scripting/deathmatch_loader.sp -o ./plugins/deathmatch-loader.smx

    - name: Prepare files for artifact
      run: |
        mkdir artifact
        mv ./plugins ./artifact/
        mv ./scripting ./artifact/
        mv ./LICENSE ./artifact/

    - name: Zip plugin
      run : |
        cd artifact
        zip -r deathmatch-loader *
        cd ..
        mv artifact/deathmatch-loader.zip .

    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url

    - name: Get Release File Name & Upload URL
      id: release_url
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value

    - name: Upload Release files
      id: upload-release-files 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release_url.outputs.upload_url }}
        asset_path: ./deathmatch-loader.zip
        asset_name: deathmatch-loader-sm${{ matrix.sm-version }}.zip
        asset_content_type: application/zip